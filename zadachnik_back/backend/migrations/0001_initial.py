# Generated by Django 5.0.3 on 2024-03-30 18:42

import datetime
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
            },
        ),
        migrations.CreateModel(
            name='DirectionTraning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Направление подготовки',
                'verbose_name_plural': 'Направления подготовки',
            },
        ),
        migrations.CreateModel(
            name='Statuses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.CreateModel(
            name='TypesTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип темы',
                'verbose_name_plural': 'Типы тем',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('direction_traning', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.directiontraning', verbose_name='Направление подготовки')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('surename', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('midname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('discription', models.TextField(blank=True, max_length=255, null=True, verbose_name='Описание')),
                ('avatar', models.ImageField(blank=True, max_length=255, null=True, upload_to='avatars/', verbose_name='Фото')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Преподаватель')),
                ('is_admin', models.BooleanField(default=False)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.groups', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('discription', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
                ('count_users', models.IntegerField(default=1, verbose_name='Количество людей на тему')),
                ('date_create', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата создания')),
                ('direction_traning', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.directiontraning', verbose_name='Направление подготовки')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.statuses', verbose_name='Статус')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Теги')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('type_topic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.typestopic', verbose_name='Тип темы')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': 'Темы',
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_action', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата события')),
                ('isChecked', models.BooleanField(default=False, verbose_name='Сообщение прочитано')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.actions', verbose_name='Событие')),
                ('user_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_from_set', to=settings.AUTH_USER_MODEL, verbose_name='Действие от')),
                ('user_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_to_set', to=settings.AUTH_USER_MODEL, verbose_name='Действие к')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.topics', verbose_name='Тема')),
            ],
            options={
                'verbose_name': 'Логи',
                'verbose_name_plural': 'Логи',
            },
        ),
    ]
